/***************************************************************************
*               Generated by StarUML(tm) C++ Add-In                        *
***************************************************************************/
/***************************************************************************
*                                                                          *
*           Institute of Industrial and Control Engineering                *
*                 Technical University of Catalunya                        *
*                        Barcelona, Spain                                  *
*                                                                          *
*                Project Name:       Kautham Planner                       *
*                                                                          *
*     Copyright (C) 2007 - 2009 by Alexander Pérez and Jan Rosell          *
*            alexander.perez@upc.edu and jan.rosell@upc.edu                *
*                                                                          *
*             This is a motion planning tool to be used into               *
*             academic environment and it's provided without               *
*                     any warranty by the authors.                         *
*                                                                          *
*          Alexander Pérez is also with the Escuela Colombiana             *
*          de Ingeniería "Julio Garavito" placed in Bogotá D.C.            *
*             Colombia.  alexander.perez@escuelaing.edu.co                 *
*                                                                          *
***************************************************************************/
/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
 
 
 
#if !defined(_IVPQPELEMENT_H)
#define _IVPQPELEMENT_H

#include "ivelement.h"
#include <libutil/kauthamdefs.h>
#include <Inventor/SoPrimitiveVertex.h>
#include <libpqp/PQP.h>
#include "lcprng.h"
#include <Inventor/actions/SoCallbackAction.h>
#include <Inventor/SbLinear.h>
#include <Inventor/nodes/SoVertexProperty.h>
#include <Inventor/nodes/SoFaceSet.h>


namespace libProblem {
  class IVPQPElement : public IVElement {
  public:
    IVPQPElement(string visFile, KthReal sc);
	  SoSeparator* getIvFromPQPModel(bool tran = true);
	  bool collideTo(Element* other);
	  KthReal getDistanceTo(Element* other);
    inline PQP_Model* pqpModel(){return pqpmodel;}
  private:
	  PQP_Model *pqpmodel;
	  bool makePQPModel();
    struct tri_info {
			tri_info(PQP_Model* model, double scaleFactor, int cnt=0) {
				pqp_model = model; scalef = scaleFactor; tri_cnt=cnt;
			};
			PQP_Model* pqp_model;
			double scalef;
			int tri_cnt;
		};
   static void triang_CB(void *data, SoCallbackAction *action,
		    const SoPrimitiveVertex *vertex1,
		    const SoPrimitiveVertex *vertex2,
		    const SoPrimitiveVertex *vertex3);
  };
 }

#endif  //_IVPQPELEMENT_H
