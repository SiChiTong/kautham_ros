/***************************************************************************
*               Generated by StarUML(tm) C++ Add-In                        *
***************************************************************************/
/***************************************************************************
*                                                                          *
*           Institute of Industrial and Control Engineering                *
*                 Technical University of Catalunya                        *
*                        Barcelona, Spain                                  *
*                                                                          *
*                Project Name:       Kautham Planner                       *
*                                                                          *
*     Copyright (C) 2007 - 2009 by Alexander Pérez and Jan Rosell          *

*            alexander.perez@upc.edu and jan.rosell@upc.edu                *
*                                                                          *
*             This is a motion planning tool to be used into               *
*             academic environment and it's provided without               *
*                     any warranty by the authors.                         *
*                                                                          *
*          Alexander Pérez is also with the Escuela Colombiana             *
*          de Ingeniería "Julio Garavito" placed in Bogotá D.C.            *
*             Colombia.  alexander.perez@escuelaing.edu.co                 *
*                                                                          *
***************************************************************************/
/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
 
  
 /*	This file contains some useful definitions to be used into Kautham planning
		system.
*/


/**
* \mainpage THE KAUTHAM PROJECT
*  A robot simulation toolkit for motion planning and teleoperation guiding
* \section Features
*  - Multiplatform and open-source
*  -# Programming language: C++
*  -# 3D rendering: coin3D
*  -# GUI: Qt
*  -# Collision detection: PQP
*  -# Graph management: Boost Graph
*  -# Neighborhood: MPNN
*  -# Input data: XML files
*
*  - Modular and extensible
*  -# Geometric library: freeflying robots, kinematic chains and trees
*  -# Sampling library: random and deterministic sampling strategies (Halton, sdk)
*  -# Planning library: sampling-based roadmaps, RRTs
*  -# GUI library: graphic rendering and flexible library management
*  -# Device library: haptic devices, data gloves, robots and mechanical hands  (Phantom, CyberGlove, Staubli TX90, SAH)
* \section Credits
* Alexander Perez and Jan Rosell \n
* alexander.perez@upc.edu - jan.rosell@upc.edu\n
*
* Institute of Industrial and Control Engineering\n
* Technical University of Catalunya\n
* Barcelona, Spain\n
* <A HREF="http://www.ioc.upc.edu"> www.ioc.upc.edu</A>\n
*
* Alexander Perez is also with the Escuela Colombiana
* de Ingenieria "Julio Garavito" placed in Bogota D.C.
* Colombia (alexander.perez@escuelaing.edu.co)
*
*
*/



#if !defined(_KAUTHAMDEFS_H)
#define _KAUTHAMDEFS_H

#include <iostream> 
#include <string>
#include <vector>
#include <map>



using namespace std;

namespace Kautham{
  #define KthReal float
  #define MAJOR_VERSION "2"
  #define MINOR_VERSION "1"

	enum ROBOTTYPE{
		FREEFLY,
		CHAIN,
		TREE,
		CLOSEDCHAIN
	};

	enum DHAPPROACH{
		DHSTANDARD,
		DHMODIFIED
  };
	
	enum NEIGHSEARCHTYPE {
		BRUTEFORCE,
		ANNMETHOD,
	};

	enum CONFIGTYPE {
		SE2,
		SE3,
		Rn
	};

  enum LIBUSED{
    INVENTOR,
    IVPQP,
    IVSOLID
  };

  enum SPACETYPE{
    SAMPLEDSPACE,
    CONTROLSPACE,
    CONFIGSPACE
  };

  enum PROBLEMSTATE{
	  INITIAL,
	  PROBLEMLOADED,
	  CSPACECREATED,
	  PRMCALCULATED
  };

  enum CONSTRAINEDKINEMATICS{
    UNCONSTRAINED,
    BRONCHOSCOPY
  };

  //! This enumeration has the relationship of all Inverse Kinematic models
  //! available to be used as solver of the robot inverser kinematics.
  enum INVKINECLASSES{
    UNIMPLEMENTED,
    RR2D,
    TX90,
    HAND,
    TX90HAND
  };

#ifndef INFINITY
#define INFINITY 1.0e40
#endif

    typedef std::map<std::string, KthReal> HASH_S_K;
    typedef std::map<std::string, std::string> HASH_S_S;

	
	//!	Structure  that save the object position and orientation in the WSpace.	
	/*!	This structure save  temporarily the most important information about 
	*		the object position and orientation in the 3D physical space regardless
	*		If the problem is or not 3D.*/
	struct DATA{
		DATA(){
			for(int i=0;i<3;i++)
				pos[i]=ori[i]= (KthReal)0.0;
			ori[3]= (KthReal)0.0;
		}
		KthReal pos[3];
		KthReal ori[4];
	};
}

#endif //_KAUTHAMDEFS_H

